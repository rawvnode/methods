<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Engineering Productivity on Methods</title><link>https://rawvnode.github.io/cloudnativemethods/tags/engineering-productivity/</link><description>Recent content in Engineering Productivity on Methods</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Sep 2020 21:23:58 -0500</lastBuildDate><atom:link href="https://rawvnode.github.io/cloudnativemethods/tags/engineering-productivity/index.xml" rel="self" type="application/rss+xml"/><item><title>Engineering Productivity Goals</title><link>https://rawvnode.github.io/cloudnativemethods/ep-goals/</link><pubDate>Mon, 07 Sep 2020 21:23:58 -0500</pubDate><guid>https://rawvnode.github.io/cloudnativemethods/ep-goals/</guid><description>Connect all of the software delivery activities to measurable business outcomes
Empower application operators to deploy services, both stateless and stateful, without human intervention.
Enable a consistent way for services to describe events within event-driven architectures.
Enable safe and optimized default behaviors for platform capabilities wherever possible.
Provide a developer-centric PR based approach towards testing and test frameworks with fast feedback loops.</description></item><item><title>Chaos Engineering</title><link>https://rawvnode.github.io/cloudnativemethods/chaos-eng/</link><pubDate>Mon, 07 Sep 2020 21:21:59 -0500</pubDate><guid>https://rawvnode.github.io/cloudnativemethods/chaos-eng/</guid><description> Experiments
Temperature
Health checks</description></item><item><title>Performance Engineering</title><link>https://rawvnode.github.io/cloudnativemethods/perf-eng/</link><pubDate>Mon, 07 Sep 2020 21:21:59 -0500</pubDate><guid>https://rawvnode.github.io/cloudnativemethods/perf-eng/</guid><description>Runtime performance optimization Developing libraries and tools for understanding and optimizing runtime performance of different applications. Supporting teams with comprehensive analysis of runtime performance and the implications for overall system performance. Accelarating application performance Standardizing and accelerating parts of the application stack. Analyzing system performance and advising teams on runtime budgets and avoiding performance regressions. Assisting development teams Supporting development of new features to ensure acceptable runtime performance.</description></item><item><title>Test Engineering</title><link>https://rawvnode.github.io/cloudnativemethods/test-eng/</link><pubDate>Mon, 07 Sep 2020 21:20:59 -0500</pubDate><guid>https://rawvnode.github.io/cloudnativemethods/test-eng/</guid><description>Unit Testing Provide frameworks to test small things like individual functions to verify they work correctly.
Utility functions that are modular, relatively independent of other code should be verified to work by passing in user-defined inputs.
Automated software testing Increase the depth and scope of tests to improve software quality.
Provide robust automation test frameworks to support execution of thousands of different complex test case scenarios.</description></item><item><title>Auto Scaling Trait</title><link>https://rawvnode.github.io/cloudnativemethods/autoscaling/</link><pubDate>Mon, 07 Sep 2020 21:05:03 -0500</pubDate><guid>https://rawvnode.github.io/cloudnativemethods/autoscaling/</guid><description/></item><item><title>Ingress Trait</title><link>https://rawvnode.github.io/cloudnativemethods/ingress/</link><pubDate>Mon, 07 Sep 2020 21:05:03 -0500</pubDate><guid>https://rawvnode.github.io/cloudnativemethods/ingress/</guid><description/></item><item><title>Logging Trait</title><link>https://rawvnode.github.io/cloudnativemethods/logging/</link><pubDate>Mon, 07 Sep 2020 21:05:03 -0500</pubDate><guid>https://rawvnode.github.io/cloudnativemethods/logging/</guid><description/></item></channel></rss>